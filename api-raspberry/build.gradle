plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

shadowJar {
    archiveClassifier.set('')
}

group = 'org.delivery'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17 // JDK 17 사용 (필요에 따라 수정)
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    complieOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.delivery.RaspberryMain' // 실행할 메인 클래스
        )
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp-sse:4.12.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'

    implementation 'com.pi4j:pi4j-core:2.0'

    // Pi4J Raspberry Pi Plugin (필수)
    implementation 'com.pi4j:pi4j-plugin-raspberrypi:2.0'

    // PiGPIO 플러그인 (선택적, 필요 시)
    implementation 'com.pi4j:pi4j-plugin-pigpio:2.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'

    runtimeOnly 'org.slf4j:slf4j-simple:1.7.36'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}